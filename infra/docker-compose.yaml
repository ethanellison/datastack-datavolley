services:
#  notebook:
#    build: ../notebook
    # image: ethanellison/dvw-to-csv
#    container_name: notebook
#    networks:
#      iceberg_net:
#    volumes:
#      - ./notebook/ingest:/home/jovyan/work
#      - ./notebook/.jupyter:/home/jovyan/.jupyter
#    user: root
#    environment:
#      - CHOWN_EXTRA=/home/jovyan/
#      - CHOWN_EXTRA_OPTS=-R
#      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
#      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
#      - AWS_S3_ENDPOINT=${AWS_S3_ENDPOINT}
#      - PYICEBERG_CATALOG__REST__URI=http://iceberg-rest:8181/
#      - PYICEBERG_CATALOG__REST__S3__ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
#      - PYICEBERG_CATALOG__REST__S3__SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
#      - PYICEBERG_CATALOG__REST__S3__ENDPOINT=${CATALOG_S3_ENDPOINT}
#    ports:
#      - "8888:8888"
  
  # dagster-datavolley:
  #   build: ./dagster_datavolley
  #   image: ethanellison/dagster-datavolley
  #   container_name: dagster
  #   networks:
  #     iceberg_net:
  #   volumes:
  #     - /mnt/smbshare/eellison/rseq 24-25:/app/dvw
  #     # - output-files:/app/out
  #     - /mnt/smbshare/eellison/rseq 24-25/out:/app/out
  #     # - ./dagster_datavolley:/app
  #   ports:
  #     - "3000:3000"

  metabase:
    build: ./metabase
    container_name: metabase
    networks:
      iceberg_net:
    ports:
      - 3000:3000
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=dvw
      - MB_DB_PORT=5432
      - MB_DB_USER=dvw
      - MB_DB_PASS=dvw
      - MB_DB_HOST=db
      # - MB_PLUGINS_DIR=/app/plugins
    volumes:
      - ./metabase-plugins/dremio.metabase-driver.jar:/app/dremio.metabase-driver.jar

  db:
    image: postgres
    container_name: db
    restart: always
    networks:
      iceberg_net:
    environment:
#      MYSQL_ROOT_PASSWORD: password
      POSTGRES_DB: dvw
      POSTGRES_USER: dvw
      POSTGRES_PASSWORD: dvw
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "dvw"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  nessie:
    image: quay.io/projectnessie/nessie:latest
    container_name: nessie
    networks:
      iceberg_net:
    ports:
      - 19120:19120
    environment:
      - nessie.version.store.type=JDBC2
      - nessie.version.store.persist.jdbc.datasource=postgresql
      - quarkus.datasource.postgresql.jdbc.url=jdbc:postgresql://db:5432/dvw
      - quarkus.datasource.postgresql.username=dvw
      - quarkus.datasource.postgresql.password=dvw

    depends_on:
      db:
        condition: service_healthy
        restart: true

  rest:
    image: apache/iceberg-rest-fixture
    container_name: iceberg-rest
    networks:
      iceberg_net:
    ports:
      - 8181:8181
    
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - CATALOG_WAREHOUSE=${CATALOG_WAREHOUSE}
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=${CATALOG_S3_ENDPOINT}
# volumes:
#   postgres-data:
  # output-files:
  
  dremio-oss:
    container_name: dremio
    image: dremio/dremio-oss
    networks:
      iceberg_net:
    # network_mode: service:ts-dremio
    user: root
    volumes:
      - ./.conf/core-site.xml:/opt/dremio/conf/core-site.xml
      - ./.conf/dremio.conf:/opt/dremio/conf/dremio.conf
      - dremio-data:/opt/dremio/data
    ports:
      - 9047:9047
      - 31010:31010
      - 45678:45678
      - 32010:32010

networks:
  iceberg_net:

volumes:
  dremio-data:
  db-data:
